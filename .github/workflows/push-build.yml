name: Build, Version, and Push Docker Image to ECR

permissions:
  id-token: write
  issues: write
  pull-requests: write
  contents: write
  deployments: write

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full history for versioning

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ vars.ROLE_ARN }}
          aws-region: eu-central-1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Read current version
        id: read_version
        run: |
          if [ -f VERSION ]; then
            VERSION=$(cat VERSION)
            VERSION_NUMBER=$(echo $VERSION | sed 's/v//')
          else
            VERSION_NUMBER=0
          fi
          echo "VERSION_NUMBER=${VERSION_NUMBER}" >> $GITHUB_ENV

      - name: Increment version number
        id: increment_version
        run: |
          NEW_VERSION_NUMBER=$((VERSION_NUMBER + 1))
          NEW_VERSION="v${NEW_VERSION_NUMBER}"
          echo $NEW_VERSION > VERSION
          echo "IMAGE_TAG=${NEW_VERSION}" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t dipl-rad-tours-service .

      - name: Tag Docker image
        run: |
          docker tag dipl-rad-tours-service:latest ${{ secrets.ECR_REGISTRY }}:${{ env.IMAGE_TAG }}

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}:${{ env.IMAGE_TAG }}

      - name: Tag and push 'latest' Docker image
        run: |
          docker tag dipl-rad-tours-service:latest ${{ secrets.ECR_REGISTRY }}:latest
          docker push ${{ secrets.ECR_REGISTRY }}:latest

      - name: Commit and push version file
        uses: EndBug/add-and-commit@v9
        with:
          add: 'VERSION'
          message: 'Update VERSION file to ${{ env.IMAGE_TAG }}'
          author_name: 'github-actions'
          author_email: 'github-actions@github.com'
