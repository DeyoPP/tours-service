name: Build, Version, and Push Docker Image to ECR

permissions:
  id-token: write
  issues: write
  pull-requests: write
  contents: write
  deployments: write

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full history for semantic-release

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ vars.ROLE_ARN }}
          aws-region: eu-central-1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build Docker image
        run: |
          docker build -t dipl-rad-tours-service .

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npx semantic-release

      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(npm pkg get version | sed 's/[^0-9.]//g')
          echo "IMAGE_TAG=${VERSION}" >> $GITHUB_ENV

      - name: Tag Docker image
        run: |
          docker tag dipl-rad-tours-service:latest ${{ secrets.ECR_REGISTRY }}:${{ env.IMAGE_TAG }}

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}:${{ env.IMAGE_TAG }}

      - name: Tag and push 'latest' Docker image
        run: |
          docker tag dipl-rad-tours-service:latest ${{ secrets.ECR_REGISTRY }}:latest
          docker push ${{ secrets.ECR_REGISTRY }}:latest
