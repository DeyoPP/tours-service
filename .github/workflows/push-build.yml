name: Build and Release Docker Image

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install -g semantic-release @semantic-release/git @semantic-release/github @semantic-release/exec

      - name: Generate version with semantic-release
        id: release
        run: |
          npx semantic-release --dry-run
          VERSION=$(npx semantic-release --dry-run | grep -Po 'The next release version is \K[^ ]+')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ vars.ROLE_ARN }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin <your-account-id>.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and push Docker image to ECR
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          docker build -t tours-service:$VERSION .
          docker tag tours-service:$VERSION <your-account-id>.dkr.ecr.us-east-1.amazonaws.com/tours-service:$VERSION
          docker push <your-account-id>.dkr.ecr.us-east-1.amazonaws.com/tours-service:$VERSION

      - name: Push version tag to GitHub
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${VERSION}
          git push origin v${VERSION}
